<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:LauncherApp" xmlns:wpf="clr-namespace:CefSharp.Wpf;assembly=CefSharp.Wpf"
        x:Class="LauncherApp.MainWindow"
        mc:Ignorable="d"
        Title="MainWindow" Height="610" Width="1130" WindowStyle="None" MouseDown="Window_MouseDown" ResizeMode="NoResize" WindowStartupLocation="CenterScreen">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFB4B4B4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFB4B4B4"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF686868"/>
        <Style x:Key="RoundedButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="4" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#0064a1"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#0064a1"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="ProgressBar.Progress" Color="#FF06B025"/>
        <SolidColorBrush x:Key="ProgressBar.Background" Color="#FFE6E6E6"/>
        <SolidColorBrush x:Key="ProgressBar.Border" Color="#FFBCBCBC"/>
        <Style x:Key="RoundedProgressBar" TargetType="{x:Type ProgressBar}">
            <Setter Property="Foreground" Value="{StaticResource ProgressBar.Progress}"/>
            <Setter Property="Background" Value="{StaticResource ProgressBar.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ProgressBar.Border}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ProgressBar}">
                        <Grid x:Name="TemplateRoot">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Determinate"/>
                                    <VisualState x:Name="Indeterminate">
                                        <Storyboard RepeatBehavior="Forever">
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Animation" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0.25"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0.25"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0.25"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <PointAnimationUsingKeyFrames Storyboard.TargetName="Animation" Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)">
                                                <EasingPointKeyFrame KeyTime="0" Value="-0.5,0.5"/>
                                                <EasingPointKeyFrame KeyTime="0:0:1" Value="0.5,0.5"/>
                                                <EasingPointKeyFrame KeyTime="0:0:2" Value="1.5,0.5"/>
                                            </PointAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border CornerRadius="8" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"/>
                            <Rectangle x:Name="PART_Track"/>
                            <Grid x:Name="PART_Indicator" ClipToBounds="true" HorizontalAlignment="Left">
                                <Rectangle x:Name="Indicator" Fill="{TemplateBinding Foreground}" RadiusX="4" RadiusY="4"/>
                                <Rectangle x:Name="Animation" Fill="{TemplateBinding Foreground}" RenderTransformOrigin="0.5,0.5" RadiusX="4" RadiusY="4">
                                    <Rectangle.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Rectangle.RenderTransform>
                                </Rectangle>
                            </Grid>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Orientation" Value="Vertical">
                                <Setter Property="LayoutTransform" TargetName="TemplateRoot">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsIndeterminate" Value="true">
                                <Setter Property="Visibility" TargetName="Indicator" Value="Collapsed"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DiscordImage" TargetType="{x:Type Image}">
            <Setter Property="Source" Value="/images/discord.png" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Source" Value="/images/discord-active.png" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="DonateImage" TargetType="{x:Type Image}">
            <Setter Property="Source" Value="/images/donate.png" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Source" Value="/images/donate-active.png" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="MantisImage" TargetType="{x:Type Image}">
            <Setter Property="Source" Value="/images/mantis.png" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Source" Value="/images/mantis-active.png" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ResourcesImage" TargetType="{x:Type Image}">
            <Setter Property="Source" Value="/images/resources.png" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Source" Value="/images/resources-active.png" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="SkillplannerImage" TargetType="{x:Type Image}">
            <Setter Property="Source" Value="/images/skillplanner.png" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Source" Value="/images/skillplanner-active.png" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="VoteImage" TargetType="{x:Type Image}">
            <Setter Property="Source" Value="/images/vote.png" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Source" Value="/images/vote-active.png" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="minimizeImage" TargetType="{x:Type Image}">
            <Setter Property="Source" Value="/images/minimize.png" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Source" Value="/images/minimize-active.png" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="closeImage" TargetType="{x:Type Image}">
            <Setter Property="Source" Value="/images/close.png" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Source" Value="/images/close-active.png" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="NavButton" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Foreground" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="4" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="Transparent"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="Transparent"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="Transparent"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


    </Window.Resources>
    <Grid>
        <Grid.Background>
            <ImageBrush ImageSource="/images/launcher-bg.jpg" />
        </Grid.Background>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="20" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="auto" />
            <ColumnDefinition Width="20" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="5" />
            <RowDefinition Height="30" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="20" />
            <RowDefinition Height="*" />
            <RowDefinition Height="20" />
            <RowDefinition Height="25" />
            <RowDefinition Height="20" />
            <RowDefinition Height="25" />
            <RowDefinition Height="35" />
            <RowDefinition Height="22" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="20" />
        </Grid.RowDefinitions>

        <Grid Grid.Row="1" Grid.Column="3" HorizontalAlignment="Stretch" VerticalAlignment="Top">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="auto" />
            </Grid.ColumnDefinitions>
            <Button x:Name="minimizeButton" Style="{DynamicResource NavButton}" Grid.Column="0" Width="25" HorizontalAlignment="Right" Click="minimizeButton_Click">
                <Image Style="{DynamicResource minimizeImage}" />
            </Button>
            <Button x:Name="closeButton" Style="{DynamicResource NavButton}" Grid.Column="1" Width="25" HorizontalAlignment="Right" Click="closeButton_Click">
                <Image Style="{DynamicResource closeImage}" />
            </Button>
        </Grid>

        <Border Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="3" CornerRadius="4" Background="#19898989" BorderBrush="#19898989" BorderThickness="1">
            <Grid Width="1090" Height="75">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="20" />
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>

                <TextBlock x:Name="Logo" Text="Logo" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="White" />
                <Button Style="{DynamicResource NavButton}" x:Name="Discord" Click="discordButton_Click" Grid.Column="3" MouseEnter="PlayHoverSound">
                    <Image Style="{DynamicResource DiscordImage}" />
                </Button>
                <Button Style="{DynamicResource NavButton}" x:Name="Resources" Click="resourcesButton_Click" Grid.Column="4" MouseEnter="PlayHoverSound">
                    <Image Style="{DynamicResource ResourcesImage}" />
                </Button>
                <Button Style="{DynamicResource NavButton}" x:Name="Mantis" Click="mantisButton_Click" Grid.Column="5" MouseEnter="PlayHoverSound">
                    <Image Style="{DynamicResource MantisImage}" />
                </Button>
                <Button Style="{DynamicResource NavButton}" x:Name="Skillplanner" Click="skillplannerButton_Click" Grid.Column="6" MouseEnter="PlayHoverSound">
                    <Image Style="{DynamicResource SkillplannerImage}" />
                </Button>
                <Button Style="{DynamicResource NavButton}" x:Name="Vote" Click="voteButton_Click" Grid.Column="7" MouseEnter="PlayHoverSound">
                    <Image Style="{DynamicResource VoteImage}" />
                </Button>
                <Button Style="{DynamicResource NavButton}" x:Name="Donate" Click="donateButton_Click" Grid.Column="8" MouseEnter="PlayHoverSound">
                    <Image Style="{DynamicResource DonateImage}" />
                </Button>
            </Grid>
        </Border>

        <wpf:ChromiumWebBrowser x:Name="Browser" Grid.Row="4" Grid.Column="1" Grid.RowSpan="6" Width="920" Address="http://localhost/" HorizontalAlignment="Left"/>
        <TextBlock Grid.Row="5" Grid.Column="3" Text="GAME SETUP AND CONFIGURATION" FontWeight="Bold" FontFamily="Bahnschrift SemiBold Condensed" Foreground="White" VerticalAlignment="Center" HorizontalAlignment="Left" FontSize="13" />
        <Button Style="{DynamicResource RoundedButtonStyle}" x:Name="configButton" Grid.Row="6" Grid.Column="3" Width="70" Height="18" FontFamily="Bahnschrift SemiBold Condensed" Foreground="White" BorderThickness="0" Background="#006fb2" FontSize="14" Click="configButton_Click"  Content="CONFIG" HorizontalAlignment="Left" VerticalAlignment="Top" IsEnabled="False" MouseEnter="PlayHoverSound" />
        <Button Style="{DynamicResource RoundedButtonStyle}" x:Name="modsButton" Grid.Row="6" Grid.Column="3" Width="70" Height="18" FontFamily="Bahnschrift SemiBold Condensed" Foreground="White" BorderThickness="0" Background="#006fb2" FontSize="14" Click="modsButton_Click"  Content="MODS" HorizontalAlignment="Right" VerticalAlignment="Top" IsEnabled="False" MouseEnter="PlayHoverSound" />
        <TextBlock Grid.Row="7" Grid.Column="3" Text="ACCOUNT AND CHARACTER SELECT" FontWeight="Bold" FontFamily="Bahnschrift SemiBold Condensed" Foreground="White" VerticalAlignment="Center" HorizontalAlignment="Left" FontSize="13" />
        <ComboBox x:Name="AccountNameComboBox" Height="25" Grid.Row="8" Grid.Column="3" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Text="Account Name" />
        <ComboBox x:Name="CharacterNameComboBox" Height="25" Grid.Row="9" Grid.Column="3" HorizontalAlignment="Stretch" VerticalAlignment="Center" Text="Character Name" />

        <Button Style="{DynamicResource RoundedButtonStyle}" x:Name="fullScanButton" Grid.Row="10" Grid.Column="3" Height="18" Foreground="White" BorderThickness="0" Background="#006fb2" FontFamily="Bahnschrift SemiBold Condensed" FontSize="14" Click="fullScanButton_Click"  Content="FULL SCAN" VerticalAlignment="Top" IsEnabled="False" MouseEnter="PlayHoverSound" />
        <Button Style="{DynamicResource RoundedButtonStyle}" x:Name="playButton" Grid.Row="11" Grid.Column="3" Width="146" Height="55" Foreground="White" BorderThickness="0" FontFamily="Bahnschrift SemiBold Condensed" Background="#006fb2" FontSize="24" Click="playButton_Click"  Content="PLAY" IsEnabled="False" MouseEnter="PlayHoverSound" />

        <Border x:Name="statusBar" Visibility="Visible" Grid.Row="11" Grid.Column="1" CornerRadius="4" Height="30" Width="925" Background="#19898989" BorderBrush="#19898989" BorderThickness="1" VerticalAlignment="Bottom" HorizontalAlignment="Left">
            <Grid VerticalAlignment="Center" HorizontalAlignment="Left" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="20" />
                    <ColumnDefinition Width="75" />
                    <ColumnDefinition Width="65" />
                    <ColumnDefinition Width="20" />
                    <ColumnDefinition Width="40" />
                    <ColumnDefinition Width="40" />
                    <ColumnDefinition Width="20" />
                    <ColumnDefinition Width="80" />
                    <ColumnDefinition Width="25" />
                    <ColumnDefinition Width="20" />
                    <ColumnDefinition Width="40" />
                    <ColumnDefinition Width="300" />
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="1" Foreground="White" HorizontalAlignment="Left" VerticalAlignment="Top" FontFamily="Bahnschrift SemiBold Condensed" Text="ACTIVE SERVER:" FontWeight="Bold" FontSize="14" />
                <TextBlock Grid.Column="2" Foreground="White" HorizontalAlignment="Left" VerticalAlignment="Center" FontFamily="Bahnschrift SemiBold Condensed" Text="DARKNAUGHT" FontWeight="Bold" FontSize="14" />
                <TextBlock Grid.Column="4" Foreground="White" HorizontalAlignment="Left" VerticalAlignment="Center" FontFamily="Bahnschrift SemiBold Condensed" Text="STATUS:" FontWeight="Bold" FontSize="14" />
                <TextBlock Grid.Column="5" Foreground="Green" HorizontalAlignment="Left" VerticalAlignment="Center" FontFamily="Bahnschrift SemiBold Condensed" Text="ONLINE" FontWeight="Bold" FontSize="14" />
                <TextBlock Grid.Column="7" Foreground="White" HorizontalAlignment="Left" VerticalAlignment="Center" FontFamily="Bahnschrift SemiBold Condensed" Text="PLAYERS ONLINE:" FontWeight="Bold" FontSize="14" />
                <TextBlock Grid.Column="8" Foreground="White" HorizontalAlignment="Left" VerticalAlignment="Center" FontFamily="Bahnschrift SemiBold Condensed" Text="487" FontWeight="Bold" FontSize="14" />
                <TextBlock Grid.Column="10" Foreground="White" HorizontalAlignment="Left" VerticalAlignment="Center" FontFamily="Bahnschrift SemiBold Condensed" Text="UPTIME:" FontWeight="Bold" FontSize="14" />
                <TextBlock Grid.Column="11" Foreground="White" HorizontalAlignment="Left" VerticalAlignment="Center" FontFamily="Bahnschrift SemiBold Condensed" Text="13 DAYS 7 HOURS 15 MINUTES" FontWeight="Bold" FontSize="14" />
            </Grid>
        </Border>

        <Grid x:Name="ProgressGrid" Grid.Row="11" Grid.Column="1" Height="30" Width="925" Visibility="Collapsed" VerticalAlignment="Bottom" HorizontalAlignment="Left">
            <ProgressBar Style="{DynamicResource RoundedProgressBar}" x:Name="DownloadProgress" BorderThickness="0" Foreground="#39b54a" Background="#19898989" />
            <TextBlock x:Name="DownloadProgressText" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center" />
        </Grid>

    </Grid>
</Window>
