<UserControl x:Class="LauncherApp.Views.UserControls.AccountScreen.AccountLogin"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:viewmodels="clr-namespace:LauncherApp.ViewModels"
             d:DataContext="{d:DesignInstance Type=viewmodels:AccountScreenViewModel}"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800" Loaded="UserControl_Loaded">

    <!--#region Resources-->
    <UserControl.Resources>
        <Style x:Key="TextBoxTransparent" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="#99082C49"/>
            <Setter Property="BorderBrush" Value="#19000000"/>
            <Setter Property="Foreground" Value="#FFFFFFFF"/>
            <Setter Property="SelectionBrush" Value="#FF177CD1"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="8,4,8,4"/>
            <Setter Property="Margin" Value="0,4,0,4"/>
            <Setter Property="FontFamily" Value="Bahnschrift Light"/>
            <Setter Property="Cursor" Value="IBeam"/>
            <Setter Property="Height" Value="50"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="BorderBrush" Value="#93177CD1"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Background" Value="#CC304455"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="TextBlockPlaceholder" TargetType="{x:Type TextBlock}">
            <Setter Property="IsHitTestVisible" Value="False"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Foreground" Value="DarkGray"/>
            <Setter Property="Margin" Value="10,0,0,0"/>
            <Setter Property="FontFamily" Value="Bahnschrift Light"/>
        </Style>

        <Style x:Key="PasswordBoxTransparent" TargetType="{x:Type PasswordBox}">
            <Setter Property="Background" Value="#99082C49"/>
            <Setter Property="BorderBrush" Value="#19000000"/>
            <Setter Property="Foreground" Value="#FFFFFFFF"/>
            <Setter Property="SelectionBrush" Value="#FF177CD1"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="8,4,8,4"/>
            <Setter Property="Margin" Value="0,4,0,4"/>
            <Setter Property="FontFamily" Value="Bahnschrift Light"/>
            <Setter Property="Cursor" Value="IBeam"/>
        </Style>

        <Style x:Key="NavButton" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="#FF177cd1"/>
            <Setter Property="BorderBrush" Value="#10000000"/>
            <Setter Property="Foreground" Value="#FFFFFFFF"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="FontFamily" Value="Bahnschrift SemiBold"/>
            <Setter Property="FontSize" Value="22"/>
            <Setter Property="Padding" Value="0,10,1,10"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="3" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#FF0e65af"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#FF0c5897"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="#FF0e2b44"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF0c5897"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SidebarButton" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FontFamily" Value="Bahnschrift"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="30,4,0,4"/>
            <Setter Property="Margin" Value="0,3,0,3"/>
            <Setter Property="Opacity" Value="0.8"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Opacity" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Margin" Value="0,4,0,2"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" Value="0.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="{x:Type CheckBox}" TargetType="{x:Type CheckBox}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="Background" Value="#99082C49"/>
            <Setter Property="BorderBrush" Value="#99082C49"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Margin" Value="0,2,0,2"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <BulletDecorator Background="Transparent">
                            <BulletDecorator.Bullet>
                                <Grid Width="18" Height="18">
                                    <Border x:Name="Border" Background="#99082C49" BorderBrush="#FFD4DFE8" BorderThickness="2,2,2,2" CornerRadius="0"/>
                                    <Path x:Name="CheckMark" Stroke="#FFD4DFE8" StrokeThickness="2" SnapsToDevicePixels="False" Data="M1.5000001,1.5833334 L9.7920001,9.6666667 M1.5420001,9.6666667 L9.7083333,1.5000001" Margin="3.5,3.5,3.5,3.5" ClipToBounds="False"/>
                                </Grid>
                            </BulletDecorator.Bullet>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True"/>
                        </BulletDecorator>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="false">
                                <Setter Property="Visibility" Value="Collapsed" TargetName="CheckMark"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" Value="#CC5584AC" TargetName="Border"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" Value="#FF777777" TargetName="Border"/>
                                <Setter Property="BorderBrush" Value="#40000000" TargetName="Border"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <!--#endregion-->

    <!--#region Design-->
    <Grid Margin="18,0,0,0" Visibility="Visible">
        <StackPanel MaxWidth="280" MaxHeight="280">
            <TextBlock Foreground="White" FontFamily="Bahnschrift SemiBold" HorizontalAlignment="Center" VerticalAlignment="Bottom" FontSize="20">
                ACCOUNT LOGIN
            </TextBlock>

            <TextBlock Text="{Binding AccountLoginFailedTextBlock}" Foreground="#FFF32A2A" FontFamily="Bahnschrift" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="14" Visibility="{Binding AccountLoginFailedTextBlockVisibility}"/>

            <Grid>
                <TextBox Text="{Binding AccountLoginUsernameTextBox, UpdateSourceTrigger=PropertyChanged}" Style="{DynamicResource TextBoxTransparent}" Height="40" />
                <TextBlock Text="{Binding AccountLoginUsernameWatermark}">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource TextBlockPlaceholder}"/>
                    </TextBlock.Style>
                </TextBlock>
            </Grid>

            <!-- https://stackoverflow.com/questions/833943/watermark-hint-text-placeholder-textbox/836463#836463 -->
            <Grid>
                <PasswordBox Style="{DynamicResource PasswordBoxTransparent}" Height="40" PasswordChanged="PasswordBox_PasswordChanged"/>
                <TextBlock Text="{Binding AccountLoginPasswordWatermark}">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource TextBlockPlaceholder}" />
                    </TextBlock.Style>
                </TextBlock>
            </Grid>

            <CheckBox VerticalAlignment="Center" IsChecked="{Binding AccountKeepLoggedInCheckbox}" Margin="0,6,0,12">
                <TextBlock Margin="12,0,0,0">Keep me logged in</TextBlock>
            </CheckBox>

            <Button Command="{Binding AccountLoginButton}" Style="{DynamicResource NavButton}" TabIndex="4" IsEnabled="{Binding AccountLoginButtonToggle}">Log in</Button>

            <UniformGrid Rows="1" Margin="0,2,0,0">
                <Button Command="{Binding AccountLoginCreateAccountButton}" Content="Create Account" Style="{DynamicResource SidebarButton}" Padding="0,2,0,2" HorizontalAlignment="Left" VerticalAlignment="Center"></Button>
                <Button Content="Forgot Password?" Style="{DynamicResource SidebarButton}" Padding="0,2,0,2" HorizontalAlignment="Right" VerticalAlignment="Center"></Button>
            </UniformGrid>
        </StackPanel>
    </Grid>
    <!--#endregion-->
</UserControl>
