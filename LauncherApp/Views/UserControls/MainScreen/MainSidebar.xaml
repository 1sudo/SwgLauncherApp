<UserControl x:Class="LauncherApp.Views.UserControls.MainScreen.MainSidebar"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:viewmodels="clr-namespace:LauncherApp.ViewModels" 
             d:DataContext="{d:DesignInstance Type=viewmodels:MainSidebarViewModel}"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="224">

    <!--#region Resources-->
    <UserControl.Resources>
        <Style x:Key="SidebarButton" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FontFamily" Value="Bahnschrift"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="30,4,0,4"/>
            <Setter Property="Margin" Value="0,3,0,3"/>
            <Setter Property="Opacity" Value="0.8"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Opacity" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Margin" Value="0,4,0,2"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" Value="0.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <SolidColorBrush x:Key="ProgressBar.Progress" Color="#FF177CD1"/>
        <SolidColorBrush x:Key="ProgressBar.Background" Color="#FFE6E6E6"/>
        <SolidColorBrush x:Key="ProgressBar.Border" Color="#10000000"/>
        <Style x:Key="RoundedProgressBar" TargetType="{x:Type ProgressBar}">
            <Setter Property="Foreground" Value="{StaticResource ProgressBar.Progress}"/>
            <Setter Property="Background" Value="{StaticResource ProgressBar.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ProgressBar.Border}"/>
            <Setter Property="Height" Value="10"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ProgressBar}">
                        <Grid x:Name="TemplateRoot">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Determinate"/>
                                    <VisualState x:Name="Indeterminate">
                                        <Storyboard RepeatBehavior="Forever">
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Animation" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0.25"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0.25"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0.25"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <PointAnimationUsingKeyFrames Storyboard.TargetName="Animation" Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)">
                                                <EasingPointKeyFrame KeyTime="0" Value="-0.5,0.5"/>
                                                <EasingPointKeyFrame KeyTime="0:0:1" Value="0.5,0.5"/>
                                                <EasingPointKeyFrame KeyTime="0:0:2" Value="1.5,0.5"/>
                                            </PointAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border CornerRadius="3" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"/>
                            <Rectangle x:Name="PART_Track"/>
                            <Grid x:Name="PART_Indicator" ClipToBounds="true" HorizontalAlignment="Left">
                                <Rectangle x:Name="Indicator" Fill="{TemplateBinding Foreground}" RadiusX="4" RadiusY="4"/>
                                <Rectangle x:Name="Animation" Fill="{TemplateBinding Foreground}" RenderTransformOrigin="0.5,0.5" RadiusX="4" RadiusY="4">
                                    <Rectangle.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Rectangle.RenderTransform>
                                </Rectangle>
                            </Grid>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Orientation" Value="Vertical">
                                <Setter Property="LayoutTransform" TargetName="TemplateRoot">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsIndeterminate" Value="true">
                                <Setter Property="Visibility" TargetName="Indicator" Value="Collapsed"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ComboBoxTransparent" TargetType="{x:Type ComboBox}">
            <Setter Property="FontFamily" Value="Bahnschrift"/>
            <Setter Property="Foreground" Value="#99F1F8FF"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Height" Value="28"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton Grid.Column="2" Focusable="false" IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" >
                                <ToggleButton.Template>
                                    <ControlTemplate>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="10*" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <Border x:Name="Border"  Grid.ColumnSpan="2" CornerRadius="3" Background="#16f1f8ff"/>
                                            <Border Grid.Column="0" CornerRadius="3,0,0,3"  Margin="1"  Background="Transparent"/>
                                            <Path x:Name="Arrow" Grid.Column="1"  Fill="#99F1F8FF" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z"/>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                                                <Setter TargetName="Arrow" Property="Fill" Value="#FFFFFFFF" />
                                            </Trigger>
                                            <Trigger Property="ToggleButton.IsChecked" Value="true">
                                                <Setter TargetName="Border" Property="TextElement.Foreground" Value="#FFFFFFFF" />
                                                <Setter TargetName="Arrow" Property="Fill" Value="#FFFFFFFF" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </ToggleButton.Template>
                            </ToggleButton>
                            <ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Margin="6,7,0,0" Height="24" HorizontalAlignment="Left" VerticalAlignment="Top"  />
                            <TextBox x:Name="PART_EditableTextBox" Visibility="Hidden" IsReadOnly="{TemplateBinding IsReadOnly}" Margin="10,10,10,10"/>
                            <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True"  Focusable="False" PopupAnimation="Slide">
                                <Grid  Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder" Background="#CC0e2b44" />
                                    <ScrollViewer SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="NavButton" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="#FF177cd1"/>
            <Setter Property="BorderBrush" Value="#10000000"/>
            <Setter Property="Foreground" Value="#FFFFFFFF"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="FontFamily" Value="Bahnschrift SemiBold"/>
            <Setter Property="FontSize" Value="22"/>
            <Setter Property="Padding" Value="0,10,1,10"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="3" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#FF0e65af"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#FF0c5897"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="#FF0e2b44"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF0c5897"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <!--#endregion-->

    <!--#region Design-->
    <Grid HorizontalAlignment="Stretch">
        <Grid Grid.Row="1" HorizontalAlignment="Stretch">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="74" />
                <RowDefinition Height="48" />
            </Grid.RowDefinitions>

            <StackPanel Grid.Row="0" HorizontalAlignment="Stretch" Margin="0,0,0,22">
                <Button Command="{Binding VoteButton}" Content="Vote" Style="{DynamicResource SidebarButton}">
                    <Button.Background>
                        <ImageBrush Stretch="None" AlignmentX="Left" ImageSource="/Images/sidebar/icons/vote.png"/>
                    </Button.Background>
                </Button>
                <Button Command="{Binding DonateButton}" Content="Donate" Style="{DynamicResource SidebarButton}">
                    <Button.Background>
                        <ImageBrush Stretch="None" AlignmentX="Left" ImageSource="/Images/sidebar/icons/paypal.png"/>
                    </Button.Background>
                </Button>
                <Button Command="{Binding ResourcesButton}" Content="Resources" Style="{DynamicResource SidebarButton}">
                    <Button.Background>
                        <ImageBrush Stretch="None" AlignmentX="Left" ImageSource="/Images/sidebar/icons/resources.png"/>
                    </Button.Background>
                </Button>
                <Button Command="{Binding BugReportButton}" Content="Bug Report" Style="{DynamicResource SidebarButton}">
                    <Button.Background>
                        <ImageBrush Stretch="None" AlignmentX="Left" ImageSource="/Images/sidebar/icons/bug-report.png"/>
                    </Button.Background>
                </Button>
                <Button Command="{Binding SkillPlannerButton}" Content="Skill Planner" Style="{DynamicResource SidebarButton}">
                    <Button.Background>
                        <ImageBrush Stretch="None" AlignmentX="Left" ImageSource="/Images/sidebar/icons/skill-planner.png"/>
                    </Button.Background>
                </Button>
                <Button Command="{Binding SettingsButton}" Content="Game Settings" Style="{DynamicResource SidebarButton}">
                    <Button.Background>
                        <ImageBrush Stretch="None" AlignmentX="Left" ImageSource="/Images/sidebar/icons/settings.png"/>
                    </Button.Background>
                </Button>
                <Button Command="{Binding OptionsButton}" Content="Options &amp; Mods" Style="{DynamicResource SidebarButton}">
                    <Button.Background>
                        <ImageBrush Stretch="None" AlignmentX="Left" ImageSource="/Images/sidebar/icons/mods.png"/>
                    </Button.Background>
                </Button>
                <Button Command="{Binding DeveloperButton}" Content="Developer" Style="{DynamicResource SidebarButton}">
                    <Button.Background>
                        <ImageBrush Stretch="None" AlignmentX="Left" ImageSource="/Images/sidebar/icons/developer.png"/>
                    </Button.Background>
                </Button>
            </StackPanel>

            <Grid Grid.Row="1" HorizontalAlignment="Stretch" Margin="0,0,0,18" Visibility="{Binding DownloadProgressVisibility}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <TextBlock Text="{Binding ProgressTextTopLeft}" TextWrapping="Wrap" HorizontalAlignment="Left" FontFamily="Bahnschrift SemiBold" Foreground="#FFCBD4DD" Grid.Row="0" VerticalAlignment="Bottom" FontSize="10"/>
                <TextBlock Text="{Binding ProgressTextTopRight}" TextWrapping="Wrap" HorizontalAlignment="Right" FontFamily="Bahnschrift SemiBold" Foreground="White" Grid.Row="0" VerticalAlignment="Bottom" FontSize="10"/>
                <ProgressBar Value="{Binding ProgressBarTopValue}" Style="{DynamicResource RoundedProgressBar}" Grid.Row="1"/>
                <TextBlock Text="{Binding ProgressTextBottomLeft}" TextWrapping="Wrap" HorizontalAlignment="Left" FontFamily="Bahnschrift SemiCondensed" Foreground="#FFCBD4DD" Grid.Row="2" FontSize="10" VerticalAlignment="Bottom"/>
                <TextBlock Text="{Binding ProgressTextBottomRight}" TextWrapping="Wrap" HorizontalAlignment="Right" FontFamily="Bahnschrift SemiBold" Foreground="White" Grid.Row="2" VerticalAlignment="Bottom" FontSize="10"/>
                <ProgressBar Value="{Binding ProgressBarBottomValue}" Style="{DynamicResource RoundedProgressBar}" Grid.Row="3" Maximum="1000"/>
            </Grid>

            <Grid Grid.Row="1" HorizontalAlignment="Stretch" Margin="0,0,0,18" Visibility="{Binding CharacterSelectVisibility}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <TextBlock Text="Character Select" TextWrapping="Wrap" HorizontalAlignment="Left" FontFamily="Bahnschrift SemiBold" Foreground="White" Grid.Row="0" VerticalAlignment="Bottom"/>
                <ComboBox SelectedValue="{Binding SelectedCharacter}" Style="{DynamicResource ComboBoxTransparent}" Grid.Row="1" SelectedIndex="0"/>
            </Grid>

            <Button Command="{Binding PlayButton}" Style="{DynamicResource NavButton}" Content="{Binding PlayButtonText}" IsHitTestVisible="{Binding PlayButtonEnabled}" IsEnabled="{Binding PlayButtonEnabled}" VerticalAlignment="Bottom" Grid.Row="2"/>
        </Grid>
    </Grid>
    <!--#endregion-->
</UserControl>
