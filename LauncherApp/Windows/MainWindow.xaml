<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:LauncherApp"
        x:Class="LauncherApp.MainWindow"
        mc:Ignorable="d"
        Title="MainWindow" Height="610" Width="1130" WindowStyle="None" MouseDown="Window_MouseDown" ResizeMode="NoResize" WindowStartupLocation="CenterScreen" Initialized="Window_Initialized" KeyDown="Window_KeyDown">

    <!-- #region WindowResources -->
    <Window.Resources>

        <Style x:Key="NavButton" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="#FF177cd1"/>
            <Setter Property="BorderBrush" Value="#10000000"/>
            <Setter Property="Foreground" Value="#FFFFFFFF"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="FontFamily" Value="Bahnschrift SemiBold"/>
            <Setter Property="FontSize" Value="22"/>
            <Setter Property="Padding" Value="0,10,1,10"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="3" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#FF0e65af"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#FF0c5897"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="#FF0e2b44"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF0c5897"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="TitleButton" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Foreground" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Right"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Width" Value="26"/>
            <Setter Property="Height" Value="18"/>
            <Setter Property="Padding" Value="8,4,8,4"/>
            <Setter Property="Opacity" Value="0.8"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">

                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="Transparent"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="Transparent"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SidebarButton" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FontFamily" Value="Bahnschrift"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="30,4,0,4"/>
            <Setter Property="Margin" Value="0,3,0,3"/>
            <Setter Property="Opacity" Value="0.8"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Opacity" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Margin" Value="0,4,0,2"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" Value="0.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="MainMenuButton" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FontFamily" Value="Bahnschrift Light Condensed"/>
            <Setter Property="FontSize" Value="26"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="4,4,4,4"/>
            <Setter Property="Margin" Value="0,3,22,3"/>
            <Setter Property="Opacity" Value="0.8"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Opacity" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Margin" Value="0,2,22,4"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" Value="0.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="MainMenuIconButton" TargetType="{x:Type Button}" BasedOn="{StaticResource MainMenuButton}">
            <Setter Property="Width" Value="18"/>
            <Setter Property="Height" Value="18"/>
        </Style>

        <SolidColorBrush x:Key="ProgressBar.Progress" Color="#FF177CD1"/>
        <SolidColorBrush x:Key="ProgressBar.Background" Color="#FFE6E6E6"/>
        <SolidColorBrush x:Key="ProgressBar.Border" Color="#10000000"/>
        <Style x:Key="RoundedProgressBar" TargetType="{x:Type ProgressBar}">
            <Setter Property="Foreground" Value="{StaticResource ProgressBar.Progress}"/>
            <Setter Property="Background" Value="{StaticResource ProgressBar.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ProgressBar.Border}"/>
            <Setter Property="Height" Value="10"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ProgressBar}">
                        <Grid x:Name="TemplateRoot">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Determinate"/>
                                    <VisualState x:Name="Indeterminate">
                                        <Storyboard RepeatBehavior="Forever">
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Animation" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0.25"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0.25"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0.25"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <PointAnimationUsingKeyFrames Storyboard.TargetName="Animation" Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)">
                                                <EasingPointKeyFrame KeyTime="0" Value="-0.5,0.5"/>
                                                <EasingPointKeyFrame KeyTime="0:0:1" Value="0.5,0.5"/>
                                                <EasingPointKeyFrame KeyTime="0:0:2" Value="1.5,0.5"/>
                                            </PointAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border CornerRadius="3" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"/>
                            <Rectangle x:Name="PART_Track"/>
                            <Grid x:Name="PART_Indicator" ClipToBounds="true" HorizontalAlignment="Left">
                                <Rectangle x:Name="Indicator" Fill="{TemplateBinding Foreground}" RadiusX="4" RadiusY="4"/>
                                <Rectangle x:Name="Animation" Fill="{TemplateBinding Foreground}" RenderTransformOrigin="0.5,0.5" RadiusX="4" RadiusY="4">
                                    <Rectangle.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Rectangle.RenderTransform>
                                </Rectangle>
                            </Grid>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Orientation" Value="Vertical">
                                <Setter Property="LayoutTransform" TargetName="TemplateRoot">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsIndeterminate" Value="true">
                                <Setter Property="Visibility" TargetName="Indicator" Value="Collapsed"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ComboBoxTransparent" TargetType="{x:Type ComboBox}">
            <Setter Property="FontFamily" Value="Bahnschrift"/>
            <Setter Property="Foreground" Value="#99F1F8FF"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Height" Value="28"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton Grid.Column="2" Focusable="false" IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" >
                                <ToggleButton.Template>
                                    <ControlTemplate>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="10*" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <Border x:Name="Border"  Grid.ColumnSpan="2" CornerRadius="3" Background="#16f1f8ff"/>
                                            <Border Grid.Column="0" CornerRadius="3,0,0,3"  Margin="1"  Background="Transparent"/>
                                            <Path x:Name="Arrow" Grid.Column="1"  Fill="#99F1F8FF" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z"/>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                                                <Setter TargetName="Arrow" Property="Fill" Value="#FFFFFFFF" />
                                            </Trigger>
                                            <Trigger Property="ToggleButton.IsChecked" Value="true">
                                                <Setter TargetName="Border" Property="TextElement.Foreground" Value="#FFFFFFFF" />
                                                <Setter TargetName="Arrow" Property="Fill" Value="#FFFFFFFF" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </ToggleButton.Template>
                            </ToggleButton>
                            <ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Margin="6,7,0,0" Height="24" HorizontalAlignment="Left" VerticalAlignment="Top"  />
                            <TextBox x:Name="PART_EditableTextBox" Visibility="Hidden" IsReadOnly="{TemplateBinding IsReadOnly}" Margin="10,10,10,10"/>
                            <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True"  Focusable="False" PopupAnimation="Slide">
                                <Grid  Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder" Background="#CC0e2b44" />
                                    <ScrollViewer SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
            </Style.Triggers>
        </Style>

        <Style x:Key="titleButtonImage" TargetType="{x:Type Image}">
            <Setter Property="Opacity" Value="0.8" />
            <Setter Property="Cursor" Value="Hand"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Button,AncestorLevel=1}, Path=IsMouseOver}" Value="True" >
                    <Setter Property="Opacity" Value="1" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="closeBtn" TargetType="{x:Type Button}" BasedOn="{StaticResource TitleButton}">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background" Value="#FFF04747" />
                </Trigger>
            </Style.Triggers>
        </Style>


        <!-- Temp Setup Styles -->
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFB4B4B4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFB4B4B4"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF686868"/>
        <Style x:Key="RoundedButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="4" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#0064a1"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#0064a1"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="setupImage" TargetType="{x:Type Image}">
            <Setter Property="Source" Value="/images/setup.png" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Source" Value="/images/setup-active.png" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="setupAdvancedImage" TargetType="{x:Type Image}">
            <Setter Property="Source" Value="/images/setup-advanced.png" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Source" Value="/images/setup-advanced-active.png" />
                </Trigger>
            </Style.Triggers>
        </Style>



        <Style x:Key="TextBoxTransparent" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="#99082C49"/>
            <Setter Property="BorderBrush" Value="#19000000"/>
            <Setter Property="Foreground" Value="#FFFFFFFF"/>
            <Setter Property="SelectionBrush" Value="#FF177CD1"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="8,4,8,4"/>
            <Setter Property="Margin" Value="0,4,0,4"/>
            <Setter Property="FontFamily" Value="Bahnschrift Light"/>
            <Setter Property="Cursor" Value="IBeam"/>
            <Setter Property="Height" Value="50"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="BorderBrush" Value="#93177CD1"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Background" Value="#CC304455"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="TextBlockPlaceholder" TargetType="{x:Type TextBlock}">
            <Setter Property="IsHitTestVisible" Value="False"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Foreground" Value="DarkGray"/>
            <Setter Property="Margin" Value="10,0,0,0"/>
            <Setter Property="FontFamily" Value="Bahnschrift Light"/>
        </Style>

        <Style x:Key="PasswordBoxTransparent" TargetType="{x:Type PasswordBox}">
            <Setter Property="Background" Value="#99082C49"/>
            <Setter Property="BorderBrush" Value="#19000000"/>
            <Setter Property="Foreground" Value="#FFFFFFFF"/>
            <Setter Property="SelectionBrush" Value="#FF177CD1"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="8,4,8,4"/>
            <Setter Property="Margin" Value="0,4,0,4"/>
            <Setter Property="FontFamily" Value="Bahnschrift Light"/>
            <Setter Property="Cursor" Value="IBeam"/>
        </Style>

        <Style x:Key="CustomRadioBlock" TargetType="{x:Type Button}">
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="BorderBrush" Value="#19000000"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="Margin" Value="12,12,12,12"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="3" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#99082C49"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="#CC5584AC"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="#FF777777"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#40000000"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="HeaderText" TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="#FFFFFFFF"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="FontFamily" Value="Bahnschrift SemiBold Condensed"/>
            <Setter Property="UseLayoutRounding" Value="True"/>
        </Style>

        <Style x:Key="MainWindowTitle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource HeaderText}">
            <Setter Property="FontSize" Value="24"/>
        </Style>

        <Style x:Key="h2" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource HeaderText}">
            <Setter Property="FontSize" Value="20"/>
        </Style>

        <Style x:Key="h3" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource HeaderText}">
            <Setter Property="FontSize" Value="16"/>
        </Style>

        <Style x:Key="ServerStatusText" TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="#97FFFFFF"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="FontFamily" Value="Bahnschrift SemiLight Condensed"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Padding" Value="0,0,4,0"/>
        </Style>

        <Style x:Key="ServerStatusData" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource ServerStatusText}">
            <Setter Property="Padding" Value="0"/>
            <Setter Property="FontFamily" Value="Bahnschrift SemiBold Condensed"/>
        </Style>

        <Style x:Key="{x:Type CheckBox}" TargetType="{x:Type CheckBox}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="Background" Value="#99082C49"/>
            <Setter Property="BorderBrush" Value="#99082C49"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Margin" Value="0,2,0,2"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <BulletDecorator Background="Transparent">
                            <BulletDecorator.Bullet>
                                <Grid Width="18" Height="18">
                                    <Border x:Name="Border" Background="#99082C49" BorderBrush="#FFD4DFE8" BorderThickness="2,2,2,2" CornerRadius="0"/>
                                    <Path x:Name="CheckMark" Stroke="#FFD4DFE8" StrokeThickness="2" SnapsToDevicePixels="False" Data="M1.5000001,1.5833334 L9.7920001,9.6666667 M1.5420001,9.6666667 L9.7083333,1.5000001" Margin="3.5,3.5,3.5,3.5" ClipToBounds="False"/>
                                </Grid>
                            </BulletDecorator.Bullet>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True"/>
                        </BulletDecorator>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="false">
                                <Setter Property="Visibility" Value="Collapsed" TargetName="CheckMark"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" Value="#CC5584AC" TargetName="Border"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" Value="#FF777777" TargetName="Border"/>
                                <Setter Property="BorderBrush" Value="#40000000" TargetName="Border"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SettingsColumn" TargetType="{x:Type StackPanel}">
            <Setter Property="Margin" Value="0,0,0,8"/>
        </Style>

    </Window.Resources>
    <!-- #endregion -->

    <Grid>
        <!-- #region General -->
        <Grid.Background>
            <ImageBrush ImageSource="/Images/swg-legacy-launcher-bg.png" />
        </Grid.Background>
        <Grid.RowDefinitions>
            <RowDefinition Height="18"/>
            <RowDefinition Height="120"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="36"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="36" />
            <ColumnDefinition Width="224" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="36" />
        </Grid.ColumnDefinitions>

        <!-- Title Bar -->
        <StackPanel Grid.Row="0" Grid.Column="0" Orientation="Horizontal" Grid.ColumnSpan="4" FlowDirection="RightToLeft">
            <StackPanel.Background>
                <LinearGradientBrush EndPoint="0,0" StartPoint="1,0">
                    <GradientStop Color="#00000000"/>
                    <GradientStop Color="#4C000000" Offset="0.8"/>
                </LinearGradientBrush>
            </StackPanel.Background>
            <StackPanel Orientation="Horizontal" FlowDirection="LeftToRight">
                <Button x:Name="MuteButton" Style="{DynamicResource TitleButton}" Grid.Column="1" MouseEnter="PlayHoverSound">
                    <Image Style="{DynamicResource titleButtonImage}" Source="/Images/icons/volume.png" />
                </Button>
                <Button x:Name="AboutButton" Style="{DynamicResource TitleButton}" Grid.Column="1" MouseEnter="PlayHoverSound">
                    <Image Style="{DynamicResource titleButtonImage}" Source="/Images/icons/info.png" />
                </Button>
                <Button x:Name="MinimizeButton" Style="{DynamicResource TitleButton}" Grid.Column="1" MouseEnter="PlayHoverSound" Click="MinimizeButton_Click">
                    <Image Style="{DynamicResource titleButtonImage}" Source="/Images/icons/minimize.png" />
                </Button>
                <Button x:Name="CloseButton" Style="{DynamicResource closeBtn}" Grid.Column="2" MouseEnter="PlayHoverSound" Click="CloseButton_Click">
                    <Image Style="{DynamicResource titleButtonImage}" Source="/Images/icons/close.png" />
                </Button>
            </StackPanel>
        </StackPanel>

        <!-- Logo Background -->
        <Grid Grid.ColumnSpan="2147483647" Grid.RowSpan="2147483647" IsHitTestVisible="false" Width="873" Height="449" HorizontalAlignment="Left" VerticalAlignment="Top">
            <Grid.OpacityMask>
                <ImageBrush ImageSource="/Images/sidebar/swg-legacy-nebula-opacity-mask.png" />
            </Grid.OpacityMask>
            <Grid x:Name="logoBackground" Grid.Row="0" Grid.Column="0" IsHitTestVisible="false" Width="2000" Height="2000" HorizontalAlignment="Left" VerticalAlignment="Top">
                <Grid.Triggers>
                    <EventTrigger RoutedEvent="Window.Loaded">
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="Background.Transform.Angle" By="360" Duration="0:05:00" RepeatBehavior="Forever"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </Grid.Triggers>

                <Grid.Background>
                    <ImageBrush ImageSource="/Images/sidebar/swg-legacy-nebula-bg.jpg" AlignmentX="Center" AlignmentY="Center" Stretch="None" Opacity="0.15">
                        <ImageBrush.RelativeTransform>
                            <TransformGroup>
                                <ScaleTransform CenterY="0" CenterX="0"/>
                                <SkewTransform CenterY="0" CenterX="0"/>
                                <RotateTransform CenterY="0" CenterX="0" Angle="180"/>
                                <TranslateTransform X="0.5" Y="0.5"/>
                            </TransformGroup>
                        </ImageBrush.RelativeTransform>
                        <ImageBrush.Transform>
                            <RotateTransform/>
                        </ImageBrush.Transform>
                    </ImageBrush>
                </Grid.Background>
            </Grid>
        </Grid>

        <!-- Logo -->
        <Grid Grid.Row="1" Grid.Column="1" HorizontalAlignment="Stretch">
            <Image Source="/Images/sidebar/swg-legacy-launcher-logo.png" Stretch="None" VerticalAlignment="Center"/>
        </Grid>

        <!-- Main Menu -->
        <Border Grid.Row="1" Grid.Column="2" HorizontalAlignment="Stretch" CornerRadius="3" Margin="18,0,0,0" Padding="18,0,0,0"  Height="60">
            <Border.Background>
                <LinearGradientBrush EndPoint="1,1" StartPoint="0,0">
                    <GradientStop Color="#33000000"/>
                    <GradientStop Color="#00000000" Offset="1"/>
                </LinearGradientBrush>
            </Border.Background>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <StackPanel Orientation="Horizontal">
                    <Button Content="UPDATES" Style="{DynamicResource MainMenuButton}" MouseEnter="PlayHoverSound" Click="PatchNotesButton_Click"></Button>
                    <Button Content="WEBSITE" Style="{DynamicResource MainMenuButton}" MouseEnter="PlayHoverSound" Click="WebsiteButton_Click"></Button>
                    <Button Content="FORUMS" Style="{DynamicResource MainMenuButton}" MouseEnter="PlayHoverSound" Click="ForumsButton_Click"></Button>
                    <Button Content="WIKI" Style="{DynamicResource MainMenuButton}" MouseEnter="PlayHoverSound" Click="WikiButton_Click"></Button>
                    <Button Style="{DynamicResource MainMenuIconButton}" MouseEnter="PlayHoverSound" Click="FacebookButton_Click">
                        <Button.Background>
                            <ImageBrush Stretch="None" AlignmentX="Left" ImageSource="/Images/sidebar/icons/facebook.png"/>
                        </Button.Background>
                    </Button>
                    <Button Style="{DynamicResource MainMenuIconButton}" MouseEnter="PlayHoverSound" Click="DiscordButton_Click">
                        <Button.Background>
                            <ImageBrush Stretch="None" AlignmentX="Left" ImageSource="/Images/sidebar/icons/discord.png"/>
                        </Button.Background>
                    </Button>
                </StackPanel>
                <StackPanel Grid.Column="1" VerticalAlignment="Center" Margin="24,0,18,0" Opacity="0.8">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Style="{DynamicResource ServerStatusText}">SERVER STATUS:</TextBlock>
                        <TextBlock Style="{DynamicResource ServerStatusData}" Foreground="#CCFFFFFF">Online</TextBlock>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Style="{DynamicResource ServerStatusText}">UPTIME:</TextBlock>
                        <TextBlock Style="{DynamicResource ServerStatusData}" Foreground="#CCFFFFFF">6 Days 23 Hours 59 Minutes</TextBlock>
                    </StackPanel>
                </StackPanel>
                <StackPanel Grid.Column="2" VerticalAlignment="Center" HorizontalAlignment="Right">
                    <!-- Username, max 20 characters -->
                    <TextBlock x:Name="UsernameTextBlock" Style="{DynamicResource h3}" Visibility="Collapsed">
                        USERNAME
                    </TextBlock>
                    <Button x:Name="LogoutButton" Content="Logout" Style="{DynamicResource MainMenuButton}" MouseEnter="PlayHoverSound" Padding="0,0,0,0" Visibility="Collapsed" HorizontalAlignment="Right" FontFamily="Bahnschrift Light Condensed" Margin="0,0,0,0" HorizontalContentAlignment="Right" FontSize="14"></Button>
                </StackPanel>
            </Grid>
        </Border>

        <!-- #endregion -->

        <!-- Primary Screen -->
        <Grid x:Name="PrimaryGrid" Grid.ColumnSpan="2" Grid.Row="2" Grid.Column="1" Visibility="Visible">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="224" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <!-- Main Sidebar -->
            <Grid Grid.Row="0" Grid.Column="0" HorizontalAlignment="Stretch">
                <Grid Grid.Row="1" HorizontalAlignment="Stretch">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="74" />
                        <RowDefinition Height="48" />
                    </Grid.RowDefinitions>

                    <StackPanel Grid.Row="0" HorizontalAlignment="Stretch" Margin="0,0,0,22">
                        <Button Content="Vote" Style="{DynamicResource SidebarButton}" MouseEnter="PlayHoverSound" Click="VoteButton_Click">
                            <Button.Background>
                                <ImageBrush Stretch="None" AlignmentX="Left" ImageSource="/Images/sidebar/icons/vote.png"/>
                            </Button.Background>
                        </Button>
                        <Button Content="Donate" Style="{DynamicResource SidebarButton}" MouseEnter="PlayHoverSound" Click="DonateButton_Click">
                            <Button.Background>
                                <ImageBrush Stretch="None" AlignmentX="Left" ImageSource="/Images/sidebar/icons/paypal.png"/>
                            </Button.Background>
                        </Button>
                        <Button Content="Resources" Style="{DynamicResource SidebarButton}" MouseEnter="PlayHoverSound" Click="ResourcesButton_Click">
                            <Button.Background>
                                <ImageBrush Stretch="None" AlignmentX="Left" ImageSource="/Images/sidebar/icons/resources.png"/>
                            </Button.Background>
                        </Button>
                        <Button Content="Bug Report" Style="{DynamicResource SidebarButton}" MouseEnter="PlayHoverSound" Click="MantisButton_Click">
                            <Button.Background>
                                <ImageBrush Stretch="None" AlignmentX="Left" ImageSource="/Images/sidebar/icons/bug-report.png"/>
                            </Button.Background>
                        </Button>
                        <Button Content="Skill Planner" Style="{DynamicResource SidebarButton}" MouseEnter="PlayHoverSound" Click="SkillplannerButton_Click">
                            <Button.Background>
                                <ImageBrush Stretch="None" AlignmentX="Left" ImageSource="/Images/sidebar/icons/skill-planner.png"/>
                            </Button.Background>
                        </Button>
                        <Button x:Name="SettingsButton" Content="Game Settings" Style="{DynamicResource SidebarButton}" MouseEnter="PlayHoverSound" Click="SettingsButton_Click">
                            <Button.Background>
                                <ImageBrush Stretch="None" AlignmentX="Left" ImageSource="/Images/sidebar/icons/settings.png"/>
                            </Button.Background>
                        </Button>
                        <Button x:Name="OptionsButton" Content="Options &amp; Mods" Style="{DynamicResource SidebarButton}" MouseEnter="PlayHoverSound" Click="OptionsButton_Click">
                            <Button.Background>
                                <ImageBrush Stretch="None" AlignmentX="Left" ImageSource="/Images/sidebar/icons/mods.png"/>
                            </Button.Background>
                        </Button>
                        <Button x:Name="DeveloperButton" Content="Developer" Style="{DynamicResource SidebarButton}" MouseEnter="PlayHoverSound" Click="DeveloperButton_Click">
                            <Button.Background>
                                <ImageBrush Stretch="None" AlignmentX="Left" ImageSource="/Images/sidebar/icons/developer.png"/>
                            </Button.Background>
                        </Button>
                    </StackPanel>

                    <Grid x:Name="ProgressGrid" Grid.Row="1" HorizontalAlignment="Stretch" Margin="0,0,0,18" Visibility="Collapsed">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <TextBlock x:Name="DownloadProgressText" TextWrapping="Wrap" HorizontalAlignment="Left" FontFamily="Bahnschrift SemiBold" Foreground="#FFCBD4DD" Grid.Row="0" VerticalAlignment="Bottom" FontSize="10"/>
                        <TextBlock x:Name="DownloadProgressTextRight" TextWrapping="Wrap" HorizontalAlignment="Right" FontFamily="Bahnschrift SemiBold" Foreground="White" Grid.Row="0" VerticalAlignment="Bottom" FontSize="10"/>
                        <ProgressBar x:Name="DownloadProgress" Style="{DynamicResource RoundedProgressBar}" Grid.Row="1"/>
                        <TextBlock x:Name="DownloadProgressText2" TextWrapping="Wrap" HorizontalAlignment="Left" FontFamily="Bahnschrift SemiCondensed" Foreground="#FFCBD4DD" Grid.Row="2" FontSize="10" VerticalAlignment="Bottom"/>
                        <TextBlock x:Name="DownloadProgressTextRight2" TextWrapping="Wrap" HorizontalAlignment="Right" FontFamily="Bahnschrift SemiBold" Foreground="White" Grid.Row="2" VerticalAlignment="Bottom" FontSize="10"/>
                        <ProgressBar x:Name="DownloadProgress2" Style="{DynamicResource RoundedProgressBar}" Grid.Row="3"/>
                    </Grid>

                    <Grid x:Name="CharacterSelectGrid" Grid.Row="1" HorizontalAlignment="Stretch" Margin="0,0,0,18" >
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <TextBlock Text="Character Select" TextWrapping="Wrap" HorizontalAlignment="Left" FontFamily="Bahnschrift SemiBold" Foreground="White" Grid.Row="0" VerticalAlignment="Bottom"/>
                        <ComboBox x:Name="CharacterNameComboBox" Style="{DynamicResource ComboBoxTransparent}" Grid.Row="1" SelectedIndex="0" SelectionChanged="CharacterNameComboBox_SelectionChanged" />
                    </Grid>

                    <Button x:Name="PlayButton" Style="{DynamicResource NavButton}" Content="Play" VerticalAlignment="Bottom" Grid.Row="2" Click="PlayButton_Click" />
                </Grid>
            </Grid>

            <!-- Main Window -->
            <Grid Grid.Row="2" Grid.Column="2" HorizontalAlignment="Stretch" Margin="18,0,0,0">
                <Grid.Background>
                    <RadialGradientBrush Center="0,0.5" GradientOrigin="0,0.5" RadiusY="0.5" RadiusX="1">
                        <GradientStop Color="#33000000" Offset="0.4"/>
                        <GradientStop Color="#00000000" Offset="1"/>
                    </RadialGradientBrush>
                </Grid.Background>

                <Grid x:Name="UpdatesGrid" Margin="18,0,0,0">

                </Grid>

                <!-- Settings -->
                <Grid x:Name="SettingsGrid" Visibility="Collapsed" Margin="18,0,0,0">
                    <StackPanel>
                        <Border BorderThickness="0,0,0,1" Margin="0,0,0,10" Padding="0,0,0,2">
                            <Border.BorderBrush>
                                <LinearGradientBrush EndPoint="1,1" StartPoint="0,0">
                                    <GradientStop Color="#4C000000"/>
                                    <GradientStop Color="#00000000" Offset="0.8"/>
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                            <DockPanel>
                                <TextBlock Style="{DynamicResource MainWindowTitle}" VerticalAlignment="Bottom">
                            Game Settings
                                </TextBlock>
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                                    <Button x:Name="RevertSettingsButton" Style="{DynamicResource NavButton}" FontSize="12" Margin="0,0,12,0" Padding="15,5,15,5">Revert</Button>
                                    <Button x:Name="SubmitSettingsButton" Style="{DynamicResource NavButton}" FontSize="12" Padding="15,5,15,5" Click="SubmitSettingsButton_Click">Save Changes</Button>
                                </StackPanel>
                            </DockPanel>
                        </Border>
                        <StackPanel Style="{DynamicResource SettingsColumn}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="140" />
                                    <ColumnDefinition Width="140" />
                                    <ColumnDefinition Width="140" />
                                    <ColumnDefinition Width="140" />
                                </Grid.ColumnDefinitions>
                                <StackPanel Margin="0,0,4,0">
                                    <TextBlock Style="{DynamicResource h3}">
                                    Game Resolution
                                    </TextBlock>
                                    <ComboBox x:Name="ResolutionBox" SelectedIndex="1" Style="{DynamicResource ComboBoxTransparent}" />
                                </StackPanel>

                                <StackPanel Margin="4,0,4,0" Grid.Column="1">
                                    <TextBlock Style="{DynamicResource h3}">
                                    Shader
                                    </TextBlock>
                                    <ComboBox x:Name="ShaderBox" SelectedIndex="0" Style="{DynamicResource ComboBoxTransparent}">
                                        <ComboBoxItem Content="Optimal" />
                                        <ComboBoxItem Content="2.0 (Override)" />
                                        <ComboBoxItem Content="1.4 (Override)" />
                                        <ComboBoxItem Content="1.1 (Override)" />
                                        <ComboBoxItem Content="Disabled" />
                                    </ComboBox>
                                </StackPanel>

                                <StackPanel Margin="4,0,4,0" Grid.Column="2">
                                    <TextBlock Style="{DynamicResource h3}">
                                    Memory
                                    </TextBlock>
                                    <ComboBox x:Name="MemoryBox" SelectedIndex="0" Style="{DynamicResource ComboBoxTransparent}">
                                        <ComboBoxItem Content="4GB" />
                                        <ComboBoxItem Content="2GB" />
                                        <ComboBoxItem Content="1GB" />
                                        <ComboBoxItem Content="512MB" />
                                    </ComboBox>
                                </StackPanel>

                                <StackPanel Margin="4,0,4,0" Grid.Column="3">
                                    <TextBlock Style="{DynamicResource h3}">
                                    FPS Limit
                                    </TextBlock>
                                    <ComboBox x:Name="FpsBox" SelectedIndex="2" Style="{DynamicResource ComboBoxTransparent}">
                                        <ComboBoxItem Content="240" />
                                        <ComboBoxItem Content="144" />
                                        <ComboBoxItem Content="60" />
                                        <ComboBoxItem Content="30" />
                                    </ComboBox>
                                </StackPanel>

                                <StackPanel Margin="4,0,0,0" Grid.Column="4">
                                    <TextBlock Style="{DynamicResource h3}">
                                    Camera Zoom
                                    </TextBlock>
                                    <ComboBox x:Name="ZoomBox" SelectedIndex="0" Style="{DynamicResource ComboBoxTransparent}">
                                        <ComboBoxItem Content="1 (Default)" />
                                        <ComboBoxItem Content="3" />
                                        <ComboBoxItem Content="5 (Medium)" />
                                        <ComboBoxItem Content="7" />
                                        <ComboBoxItem Content="10 (Far)" />
                                    </ComboBox>
                                </StackPanel>
                            </Grid>
                        </StackPanel>

                        <StackPanel Style="{DynamicResource SettingsColumn}">
                            <TextBlock Style="{DynamicResource h3}">
                            Display
                            </TextBlock>
                            <UniformGrid Columns="3">
                                <CheckBox x:Name="WindowModeCheckbox">
                                    <TextBlock Margin="12,0,0,0">Window Mode</TextBlock>
                                </CheckBox>
                                <CheckBox x:Name="BorderlessWindowCheckbox">
                                    <TextBlock Margin="12,0,0,0">Borderless Window</TextBlock>
                                </CheckBox>
                                <CheckBox x:Name="DisableVsyncCheckbox">
                                    <TextBlock Margin="12,0,0,0">Disable Vsync (Allow Tearing)</TextBlock>
                                </CheckBox>
                            </UniformGrid>
                        </StackPanel>

                        <StackPanel Style="{DynamicResource SettingsColumn}">
                            <TextBlock Style="{DynamicResource h3}">
                            General
                            </TextBlock>
                            <UniformGrid Columns="3">
                                <CheckBox x:Name="SkipIntroCheckbox">
                                    <TextBlock Margin="12,0,0,0">Skip Intro Sequence</TextBlock>
                                </CheckBox>
                                <CheckBox x:Name="DisableAudioCheckbox">
                                    <TextBlock Margin="12,0,0,0">Disable Audio</TextBlock>
                                </CheckBox>
                            </UniformGrid>
                        </StackPanel>

                        <StackPanel Style="{DynamicResource SettingsColumn}">
                            <TextBlock Style="{DynamicResource h3}">
                            Graphics
                            </TextBlock>
                            <UniformGrid Columns="3">
                                <CheckBox x:Name="DisableLODManagerCheckbox">
                                    <TextBlock Margin="12,0,0,0">Disable Level of Detail Manager</TextBlock>
                                </CheckBox>
                                <CheckBox x:Name="DisableWorldPreloadingCheckbox">
                                    <TextBlock Margin="12,0,0,0">Disable World Preloading</TextBlock>
                                </CheckBox>
                                <CheckBox x:Name="LowDetailCharactersCheckbox">
                                    <TextBlock Margin="12,0,0,0">Use Low Detail Characters</TextBlock>
                                </CheckBox>
                                <CheckBox x:Name="LowDetailMeshesCheckbox">
                                    <TextBlock Margin="12,0,0,0">Use Low Detail Meshes</TextBlock>
                                </CheckBox>
                                <CheckBox x:Name="DisableTextureBakingCheckbox">
                                    <TextBlock Margin="12,0,0,0">Disable Texture Baking</TextBlock>
                                </CheckBox>
                                <CheckBox x:Name="DisableBumpMappingCheckbox">
                                    <TextBlock Margin="12,0,0,0">Disable Bump Mapping</TextBlock>
                                </CheckBox>
                                <CheckBox x:Name="LowDetailTexturesCheckbox">
                                    <TextBlock Margin="12,0,0,0">Use Low Detail Textures</TextBlock>
                                </CheckBox>
                                <CheckBox x:Name="LowDetailNormalsCheckbox">
                                    <TextBlock Margin="12,0,0,0">Use Low Detail Normal Maps</TextBlock>
                                </CheckBox>
                                <CheckBox x:Name="DisableMultiPassRenderingCheckbox">
                                    <TextBlock Margin="12,0,0,0">Disable Multi-Pass Rendering</TextBlock>
                                </CheckBox>
                            </UniformGrid>
                        </StackPanel>

                        <StackPanel Style="{DynamicResource SettingsColumn}">
                            <TextBlock Style="{DynamicResource h3}">
                            Advanced
                            </TextBlock>
                            <UniformGrid Columns="3">
                                <CheckBox x:Name="DisableHardwareMouseCheckbox">
                                    <TextBlock Margin="12,0,0,0">Disable Hardware Mouse Cursor</TextBlock>
                                </CheckBox>
                                <CheckBox x:Name="DisableFastMouseCheckbox">
                                    <TextBlock Margin="12,0,0,0">Disable Fast Mouse Cursor</TextBlock>
                                </CheckBox>
                                <CheckBox x:Name="UseSafeRendererCheckbox">
                                    <TextBlock Margin="12,0,0,0">Use Safe Renderer (Slower)</TextBlock>
                                </CheckBox>
                                <CheckBox x:Name="DisableFileCachingCheckbox">
                                    <TextBlock Margin="12,0,0,0">Disable File Caching</TextBlock>
                                </CheckBox>
                                <CheckBox x:Name="DisableAsyncLoaderCheckbox">
                                    <TextBlock Margin="12,0,0,0">Disable Asynchronous Loader</TextBlock>
                                </CheckBox>
                            </UniformGrid>
                        </StackPanel>
                    </StackPanel>
                </Grid>

                <!-- Options and Mods -->
                <Grid x:Name="OptionsAndModsGrid" Visibility="Collapsed" Margin="18,0,0,0">
                    <StackPanel>
                        <Border BorderThickness="0,0,0,1" Margin="0,0,0,10" Padding="0,0,0,2">
                            <Border.BorderBrush>
                                <LinearGradientBrush EndPoint="1,1" StartPoint="0,0">
                                    <GradientStop Color="#4C000000"/>
                                    <GradientStop Color="#00000000" Offset="0.8"/>
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                            <DockPanel>
                                <TextBlock Style="{DynamicResource MainWindowTitle}" VerticalAlignment="Bottom">
                                Options &amp; Modifications
                                </TextBlock>
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                                    <Button x:Name="RevertModsButton" Style="{DynamicResource NavButton}" FontSize="12" Margin="0,0,12,0" Padding="15,5,15,5">Revert</Button>
                                    <Button x:Name="SubmitModsButton" Style="{DynamicResource NavButton}" FontSize="12" Padding="15,5,15,5" Click="SubmitModsButton_Click">Save Changes</Button>
                                </StackPanel>
                            </DockPanel>
                        </Border>

                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="auto" />
                            </Grid.RowDefinitions>

                            <StackPanel Style="{DynamicResource SettingsColumn}">
                                <UniformGrid Columns="2">
                                    <StackPanel Margin="0,0,9,0">
                                        <Border BorderThickness="0,0,0,1" Margin="0,0,0,4">
                                            <Border.BorderBrush>
                                                <LinearGradientBrush EndPoint="1,1" StartPoint="0,0">
                                                    <GradientStop Color="#4C000000"/>
                                                    <GradientStop Color="#00000000" Offset="0.8"/>
                                                </LinearGradientBrush>
                                            </Border.BorderBrush>
                                            <TextBlock Style="{DynamicResource h2}" VerticalAlignment="Bottom">
                                                Game Options
                                            </TextBlock>
                                        </Border>
                                        <UniformGrid Columns="1">
                                            <StackPanel Style="{DynamicResource SettingsColumn}">
                                                <TextBlock Style="{DynamicResource h3}">
                                                Installation Directory
                                                </TextBlock>
                                                <DockPanel FlowDirection="RightToLeft">
                                                    <Button x:Name="OptionsInstallDirectoryButton" Style="{DynamicResource NavButton}" FontSize="12" Padding="15,5,15,5" Height="30" VerticalAlignment="Top">Change</Button>
                                                    <TextBox x:Name="OptionsInstallDirectoryTextbox" Style="{DynamicResource TextBoxTransparent}" Height="30" Margin="8,0,0,0" IsEnabled="False" VerticalAlignment="Top" />
                                                </DockPanel>
                                            </StackPanel>
                                        </UniformGrid>

                                        <UniformGrid Columns="2" Margin="0,0,0,8">
                                            <UniformGrid Rows="1">
                                                <StackPanel Style="{DynamicResource SettingsColumn}" Margin="0,0,4,0">
                                                    <TextBlock Style="{DynamicResource h3}">
                                                    Full Scan
                                                    </TextBlock>
                                                    <Button x:Name="OptionsFullScanButton" Style="{DynamicResource NavButton}" FontSize="12" Padding="15,5,15,5" Height="30" VerticalAlignment="Top">Full Scan</Button>
                                                </StackPanel>
                                                <StackPanel Style="{DynamicResource SettingsColumn}" Margin="4,0,4,0">
                                                    <TextBlock Style="{DynamicResource h3}">
                                                    Game Setup
                                                    </TextBlock>
                                                    <Button x:Name="OptionsRerunSetupButton" Style="{DynamicResource NavButton}" FontSize="12" Padding="15,5,15,5" Height="30" VerticalAlignment="Top">Run Setup</Button>
                                                </StackPanel>
                                            </UniformGrid>
                                        </UniformGrid>
                                    </StackPanel>

                                    <StackPanel Margin="9,0,0,0">
                                        <Border BorderThickness="0,0,0,1" Margin="0,0,0,4">
                                            <Border.BorderBrush>
                                                <LinearGradientBrush EndPoint="1,1" StartPoint="0,0">
                                                    <GradientStop Color="#4C000000"/>
                                                    <GradientStop Color="#00000000" Offset="0.8"/>
                                                </LinearGradientBrush>
                                            </Border.BorderBrush>
                                            <TextBlock Style="{DynamicResource h2}" VerticalAlignment="Bottom">
                                                Server Options
                                            </TextBlock>
                                        </Border>

                                        <UniformGrid Columns="1">
                                            <StackPanel Style="{DynamicResource SettingsColumn}" Margin="0,0,4,0">
                                                <TextBlock Style="{DynamicResource h3}">
                                                    Server Selection
                                                </TextBlock>
                                                <ComboBox x:Name="OptionsLoginServerBox" SelectedIndex="1" Style="{DynamicResource ComboBoxTransparent}" />
                                            </StackPanel>
                                        </UniformGrid>
                                    </StackPanel>

                                </UniformGrid>
                            </StackPanel>

                            <StackPanel Style="{DynamicResource SettingsColumn}" Grid.Row="1">
                                <Border BorderThickness="0,0,0,1" Margin="0,0,0,4">
                                    <Border.BorderBrush>
                                        <LinearGradientBrush EndPoint="1,1" StartPoint="0,0">
                                            <GradientStop Color="#4C000000"/>
                                            <GradientStop Color="#00000000" Offset="0.8"/>
                                        </LinearGradientBrush>
                                    </Border.BorderBrush>
                                    <TextBlock Style="{DynamicResource h2}" VerticalAlignment="Bottom">
                                        Modifications
                                    </TextBlock>
                                </Border>
                                <UniformGrid Columns="2" Margin="0,0,0,9">
                                    <DockPanel Margin="0,0,8,0">
                                        <CheckBox x:Name="ModsHdTextureCheckbox">
                                            <TextBlock Margin="12,0,0,0">HD Textures Mod</TextBlock>
                                        </CheckBox>
                                        <TextBlock TextWrapping="Wrap" Foreground="#FFCBD4DD" FontFamily="Bahnschrift Light" Margin="18,0,0,0">
                                            High resolution texture upscaling of the original Star Wars Galaxies assets which signifcantly increases the fidelity of most in game textures.<LineBreak/><LineBreak/>Requires an additional <Bold>17.3GB</Bold> of hard drive space.
                                        </TextBlock>
                                    </DockPanel>
                                    <DockPanel Margin="9,0,0,0">
                                        <CheckBox x:Name="ModsReshadeCheckbox">
                                            <TextBlock Margin="12,0,0,0">ReShade</TextBlock>
                                        </CheckBox>
                                        <TextBlock TextWrapping="Wrap" Foreground="#FFCBD4DD" FontFamily="Bahnschrift Light" Margin="18,0,0,0">
                                            Custom shader preset for ReShade which sharpens details and enhances the colors.<LineBreak/><LineBreak/>Requires an additional <Bold>50MB</Bold> of hard drive space.
                                        </TextBlock>
                                    </DockPanel>
                                </UniformGrid>
                            </StackPanel>
                        </Grid>
                    </StackPanel>
                </Grid>

                <!-- Developer Options -->
                <Grid x:Name="DeveloperGrid" Visibility="Collapsed" Margin="18,0,0,0">
                    <StackPanel>
                        <Border BorderThickness="0,0,0,1" Margin="0,0,0,10" Padding="0,0,0,2">
                            <Border.BorderBrush>
                                <LinearGradientBrush EndPoint="1,1" StartPoint="0,0">
                                    <GradientStop Color="#4C000000"/>
                                    <GradientStop Color="#00000000" Offset="0.8"/>
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                            <DockPanel>
                                <TextBlock Style="{DynamicResource MainWindowTitle}" VerticalAlignment="Bottom">
                            Developer Options
                                </TextBlock>
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                                    <Button x:Name="RevertDeveloperButton" Style="{DynamicResource NavButton}" FontSize="12" Margin="0,0,12,0" Padding="15,5,15,5">Revert</Button>
                                    <Button x:Name="SubmitDeveloperButton" Style="{DynamicResource NavButton}" FontSize="12" Padding="15,5,15,5" Click="SubmitDeveloperButton_Click">Save Changes</Button>
                                </StackPanel>
                            </DockPanel>
                        </Border>

                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="auto" />
                            </Grid.RowDefinitions>

                            <StackPanel Style="{DynamicResource SettingsColumn}">
                                <Border BorderThickness="0,0,0,1" Margin="0,0,0,4">
                                    <Border.BorderBrush>
                                        <LinearGradientBrush EndPoint="1,1" StartPoint="0,0">
                                            <GradientStop Color="#4C000000"/>
                                            <GradientStop Color="#00000000" Offset="0.8"/>
                                        </LinearGradientBrush>
                                    </Border.BorderBrush>
                                    <TextBlock Style="{DynamicResource h2}" VerticalAlignment="Bottom">
                                        Game Admin Options
                                    </TextBlock>
                                </Border>
                                <UniformGrid Columns="4" Margin="0,0,0,8">
                                    <CheckBox x:Name="DevAdminCheckbox">
                                        <TextBlock Margin="12,0,0,0">God Mode</TextBlock>
                                    </CheckBox>
                                    <CheckBox x:Name="DevDebugCheckbox">
                                        <TextBlock Margin="12,0,0,0">Examine Debug</TextBlock>
                                    </CheckBox>
                                </UniformGrid>
                            </StackPanel>

                            <StackPanel Style="{DynamicResource SettingsColumn}" Grid.Row="1">
                                <Border BorderThickness="0,0,0,1" Margin="0,0,0,4">
                                    <Border.BorderBrush>
                                        <LinearGradientBrush EndPoint="1,1" StartPoint="0,0">
                                            <GradientStop Color="#4C000000"/>
                                            <GradientStop Color="#00000000" Offset="0.8"/>
                                        </LinearGradientBrush>
                                    </Border.BorderBrush>
                                    <TextBlock Style="{DynamicResource h2}" VerticalAlignment="Bottom">
                                        API &amp; Manifest
                                    </TextBlock>
                                </Border>
                                <UniformGrid Columns="4">
                                    <StackPanel Style="{DynamicResource SettingsColumn}" Margin="0,0,4,0">
                                        <TextBlock Style="{DynamicResource h3}">
                                        API URL
                                        </TextBlock>
                                        <TextBox x:Name="DevAPIurl" Style="{DynamicResource TextBoxTransparent}" Height="30" />
                                    </StackPanel>
                                    <StackPanel Style="{DynamicResource SettingsColumn}" Margin="4,0,4,0">
                                        <TextBlock Style="{DynamicResource h3}">
                                        Manifest URL
                                        </TextBlock>
                                        <TextBox x:Name="DevManifestURL" Style="{DynamicResource TextBoxTransparent}" Height="30" />
                                    </StackPanel>
                                    <StackPanel Style="{DynamicResource SettingsColumn}" Margin="4,0,0,0">
                                        <TextBlock Style="{DynamicResource h3}">
                                        Manifest File Path
                                        </TextBlock>
                                        <TextBox x:Name="DevManifestFilePath" Style="{DynamicResource TextBoxTransparent}" Height="30" />
                                    </StackPanel>
                                </UniformGrid>
                            </StackPanel>

                            <StackPanel Style="{DynamicResource SettingsColumn}" Grid.Row="2">
                                <Border BorderThickness="0,0,0,1" Margin="0,0,0,4">
                                    <Border.BorderBrush>
                                        <LinearGradientBrush EndPoint="1,1" StartPoint="0,0">
                                            <GradientStop Color="#4C000000"/>
                                            <GradientStop Color="#00000000" Offset="0.8"/>
                                        </LinearGradientBrush>
                                    </Border.BorderBrush>
                                    <TextBlock Style="{DynamicResource h2}" VerticalAlignment="Bottom">
                                        Login
                                    </TextBlock>
                                </Border>

                                <UniformGrid Columns="4">
                                    <StackPanel Style="{DynamicResource SettingsColumn}" Margin="0,0,4,0">
                                        <TextBlock Style="{DynamicResource h3}">
                                        SWG Login / Hostname
                                        </TextBlock>
                                        <TextBox x:Name="DevSWGhostname" Style="{DynamicResource TextBoxTransparent}" Height="30" />
                                    </StackPanel>
                                    <StackPanel Style="{DynamicResource SettingsColumn}" Margin="4,0,0,0">
                                        <TextBlock Style="{DynamicResource h3}">
                                        SWG Login Port
                                        </TextBlock>
                                        <TextBox x:Name="DevSWGport" Style="{DynamicResource TextBoxTransparent}" Height="30" />
                                    </StackPanel>
                                </UniformGrid>
                            </StackPanel>
                        </Grid>
                    </StackPanel>
                </Grid>

            </Grid>
        </Grid>

        <!-- Login -->
        <Grid x:Name="LoginGrid" Grid.ColumnSpan="2" Grid.Row="2" Grid.Column="1" HorizontalAlignment="Stretch" Visibility="Collapsed">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="224" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <!-- Login Sidebar -->
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="110" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <TextBlock TextWrapping="Wrap" Foreground="#FFCBD4DD" FontFamily="Bahnschrift Light">
                    Welcome to SWG Legacy.<LineBreak/><LineBreak/>Here is where I'm going to eventually write a whole bunch of bullshit about the server. It's going to be super cool sounding and make people want to click that log in button.
                </TextBlock>

                <StackPanel VerticalAlignment="Bottom" Grid.Row="1">
                    <Button x:Name="CreateAccount" Content="Create Account" Style="{DynamicResource SidebarButton}" Padding="0,2,0,2" HorizontalAlignment="Left" VerticalAlignment="Center"></Button>
                    <Button x:Name="PasswordReset" Content="Password Reset" Style="{DynamicResource SidebarButton}" Padding="0,2,0,2" HorizontalAlignment="Left" VerticalAlignment="Center"></Button>
                    <Button x:Name="LoginHelp" Content="Support / Help" Style="{DynamicResource SidebarButton}" Padding="0,2,0,2" HorizontalAlignment="Left" VerticalAlignment="Center"></Button>
                    <Button x:Name="LoginRules" Content="Rules &amp; Regulations" Style="{DynamicResource SidebarButton}" Padding="0,2,0,2" HorizontalAlignment="Left" VerticalAlignment="Center"></Button>
                </StackPanel>
            </Grid>

            <!-- Login Window -->
            <Grid Grid.Column="1" Margin="18,0,0,0" Visibility="Visible">
                <StackPanel MaxWidth="280" MaxHeight="280">
                    <TextBlock x:Name="AccountLoginText" Foreground="White" FontFamily="Bahnschrift SemiBold" HorizontalAlignment="Center" VerticalAlignment="Bottom" FontSize="20">
                        ACCOUNT LOGIN
                    </TextBlock>

                    <TextBlock x:Name="ResultText" Foreground="#FFF32A2A" FontFamily="Bahnschrift" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="14">
                    </TextBlock>

                    <Grid>
                        <TextBox Style="{DynamicResource TextBoxTransparent}" x:Name="UsernameTextbox" KeyDown="UsernameTextbox_KeyDown" Height="40" />
                        <TextBlock Text="Username">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource TextBlockPlaceholder}">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Text, ElementName=UsernameTextbox}" Value="">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </Grid>

                    <!-- https://stackoverflow.com/questions/833943/watermark-hint-text-placeholder-textbox/836463#836463 -->
                    <Grid>
                        <PasswordBox Style="{DynamicResource PasswordBoxTransparent}" x:Name="PasswordTextbox" KeyDown="PasswordTextbox_KeyDown" Height="40"/>
                        <TextBlock Text="Password">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource TextBlockPlaceholder}">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Text, ElementName=PasswordTextbox}" Value="">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </Grid>

                    <CheckBox x:Name="AutoLoginCheckbox" VerticalAlignment="Center" IsChecked="True" Margin="0,6,0,12">
                        <TextBlock Margin="12,0,0,0">Keep me logged in</TextBlock>
                    </CheckBox>

                    <Button x:Name="LoginButton" Style="{DynamicResource NavButton}" Click="LoginButton_Click" TabIndex="4">Log in</Button>

                    <UniformGrid Rows="1" Margin="0,2,0,0">
                        <Button x:Name="LoginCreateAccount" Content="Create Account" Style="{DynamicResource SidebarButton}" Padding="0,2,0,2" HorizontalAlignment="Left" VerticalAlignment="Center"></Button>
                        <Button x:Name="LoginForgotPassword" Content="Forgot Password?" Style="{DynamicResource SidebarButton}" Padding="0,2,0,2" HorizontalAlignment="Right" VerticalAlignment="Center"></Button>
                    </UniformGrid>
                </StackPanel>
            </Grid>

            <!-- Create Account -->
            <Grid Grid.Column="1" Margin="18,0,0,0" Visibility="Collapsed">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="50"/>
                    </Grid.RowDefinitions>

                    <StackPanel>
                        <StackPanel>
                            <Border BorderThickness="0,0,0,1" Margin="0,0,0,10" Padding="0,0,0,2">
                                <Border.BorderBrush>
                                    <LinearGradientBrush EndPoint="1,1" StartPoint="0,0">
                                        <GradientStop Color="#4C000000"/>
                                        <GradientStop Color="#00000000" Offset="0.8"/>
                                    </LinearGradientBrush>
                                </Border.BorderBrush>
                                <TextBlock Style="{DynamicResource MainWindowTitle}" VerticalAlignment="Bottom">
                                    Create Account
                                </TextBlock>
                            </Border>
                        </StackPanel>

                        <UniformGrid Rows="1" HorizontalAlignment="Stretch">
                            <StackPanel Margin="0,0,4,0">
                                <TextBlock Style="{DynamicResource h3}">
                                Required Information
                                </TextBlock>
                                <!-- Username -->
                                <Grid>
                                    <TextBox Style="{DynamicResource TextBoxTransparent}" x:Name="CreateUsernameTextbox" Height="40" />
                                    <TextBlock Text="Username">
                                        <TextBlock.Style>
                                            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource TextBlockPlaceholder}">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Text, ElementName=CreateUsernameTextbox}" Value="">
                                                        <Setter Property="Visibility" Value="Visible"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </Grid>

                                <!-- Email -->
                                <Grid>
                                    <TextBox Style="{DynamicResource TextBoxTransparent}" x:Name="CreateEmailTextbox" Height="40" />
                                    <TextBlock Text="Email Address">
                                        <TextBlock.Style>
                                            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource TextBlockPlaceholder}">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Text, ElementName=CreateEmailTextbox}" Value="">
                                                        <Setter Property="Visibility" Value="Visible"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </Grid>

                                <!-- Password -->
                                <Grid>
                                    <PasswordBox Style="{DynamicResource PasswordBoxTransparent}" x:Name="CreatePasswordTextbox" Height="40"/>
                                    <TextBlock Text="Password">
                                        <TextBlock.Style>
                                            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource TextBlockPlaceholder}">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Text, ElementName=CreatePasswordTextbox}" Value="">
                                                        <Setter Property="Visibility" Value="Visible"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </Grid>

                                <!-- Confirm Password -->
                                <Grid>
                                    <PasswordBox Style="{DynamicResource PasswordBoxTransparent}" x:Name="CreateConfirmPasswordTextbox" Height="40"/>
                                    <TextBlock Text="Confirm Password">
                                        <TextBlock.Style>
                                            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource TextBlockPlaceholder}">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Text, ElementName=CreateConfirmPasswordTextbox}" Value="">
                                                        <Setter Property="Visibility" Value="Visible"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </Grid>

                                <!-- Newsletter-->
                                <CheckBox x:Name="NewsletterCheckbox" VerticalAlignment="Center" IsChecked="True" Margin="0,6,0,12">
                                    <TextBlock Margin="12,0,0,0">Subscribe to the SWG Legacy Newletter</TextBlock>
                                </CheckBox>

                                <!-- Security Question -->
                                <StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Style="{DynamicResource h3}">
                                            Security Question:
                                        </TextBlock>
                                        <TextBlock x:Name="CreateSecurityQuestionTextblock" TextWrapping="Wrap" Foreground="#FFCBD4DD" FontFamily="Bahnschrift Light" Margin="8,0,0,0" VerticalAlignment="Center">
                                            1 + 1 =
                                        </TextBlock>
                                    </StackPanel>
                                    <Grid>
                                        <TextBox Style="{DynamicResource TextBoxTransparent}" x:Name="CreateSecurityQuestionTextbox" Height="40" />
                                        <TextBlock Text="Answer">
                                            <TextBlock.Style>
                                                <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource TextBlockPlaceholder}">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Text, ElementName=CreateSecurityQuestionTextbox}" Value="">
                                                            <Setter Property="Visibility" Value="Visible"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>
                                    </Grid>
                                </StackPanel>
                            </StackPanel>

                            <StackPanel Margin="4,0,0,0">
                                <TextBlock Style="{DynamicResource h3}">
                                Optional
                                </TextBlock>
                                <!-- Discord -->
                                <Grid>
                                    <TextBox Style="{DynamicResource TextBoxTransparent}" x:Name="CreateDiscordTextbox" Height="40" />
                                    <TextBlock Text="Discord ID - e.g. User#1234">
                                        <TextBlock.Style>
                                            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource TextBlockPlaceholder}">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Text, ElementName=CreateDiscordTextbox}" Value="">
                                                        <Setter Property="Visibility" Value="Visible"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </Grid>
                            </StackPanel>
                            <StackPanel Margin="18,0,0,0">
                                <TextBlock TextWrapping="Wrap" Foreground="#FFCBD4DD" FontFamily="Bahnschrift Light" VerticalAlignment="Stretch" Margin="0,19,0,0">
                                After creating an account, you will be sent an automated email from the SWG Legacy team to confirm your email address.<LineBreak/><LineBreak/>Follow the instructions in the confirmation email before signing into your account via the launcher or website.
                                </TextBlock>
                            </StackPanel>
                        </UniformGrid>
                    </StackPanel>

                    <!-- Setup Navigation Buttons -->
                    <Grid Grid.Row="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="180" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="160" />
                        </Grid.ColumnDefinitions>

                        <Button x:Name="CreateAccountButton" Content="Create Account" Style="{DynamicResource NavButton}" FontSize="18" IsEnabled="False" />
                        <TextBlock x:Name="CreateAccountResultText" Grid.Column="1" Foreground="#FFF32A2A" FontFamily="Bahnschrift" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="14"></TextBlock>
                        <Button Content="Cancel" Style="{DynamicResource NavButton}" FontSize="18" Grid.Column="3" Click="RulesAndRegulationsCancelButton_Click" />
                    </Grid>
                </Grid>
            </Grid>
        </Grid>

        <!-- Setup -->
        <Grid x:Name="SetupGrid" Grid.ColumnSpan="2" Grid.Row="2" Grid.Column="1" HorizontalAlignment="Stretch" Visibility="Collapsed">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="224" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <!-- Setup Sidebar -->
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <TextBlock TextWrapping="Wrap" Foreground="#FFCBD4DD" FontFamily="Bahnschrift Light">
                    This setup will guide you through the SWG Legacy installation process.<LineBreak/><LineBreak/>
                    Questions about the setup process? Please follow the <Bold>"Support / Help" link in the sidebar.</Bold>
                </TextBlock>

                <StackPanel Grid.Row="1" VerticalAlignment="Bottom">
                    <Button x:Name="SetupCreateAccount" Content="Create Account" Style="{DynamicResource SidebarButton}" Padding="0,2,0,2" HorizontalAlignment="Left" VerticalAlignment="Center"></Button>
                    <Button x:Name="SetupPasswordReset" Content="Password Reset" Style="{DynamicResource SidebarButton}" Padding="0,2,0,2" HorizontalAlignment="Left" VerticalAlignment="Center"></Button>
                    <Button x:Name="SetupHelp" Content="Support / Help" Style="{DynamicResource SidebarButton}" Padding="0,2,0,2" HorizontalAlignment="Left" VerticalAlignment="Center"></Button>
                    <Button x:Name="SetupRules" Content="Rules &amp; Regulations" Style="{DynamicResource SidebarButton}" Padding="0,2,0,2" HorizontalAlignment="Left" VerticalAlignment="Center"></Button>
                </StackPanel>
            </Grid>

            <!-- Setup Window -->
            <Grid Grid.Column="1" Margin="18,0,0,0" Visibility="Visible">

                <!-- #region Setup Inner -->

                <!-- Rules and Regulations -->
                <Grid x:Name="RulesAndRegulationsGrid" Visibility="Visible">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="40" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="26" />
                        <RowDefinition Height="30" />
                        <RowDefinition Height="50" />
                    </Grid.RowDefinitions>

                    <TextBlock Style="{DynamicResource MainWindowTitle}">
                        Rules And Regulations
                    </TextBlock>

                    <Grid Grid.Row="1" Margin="0,0,0,22">
                        <TextBlock Foreground="White" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" FontFamily="Bahnschrift Light" FontSize="14" UseLayoutRounding="True" Padding="12,12,12,12" Background="#19000000">
                        Content Here
                        </TextBlock>
                    </Grid>

                    <CheckBox x:Name="RulesAndRegulationsCheckbox" Foreground="White" Grid.Row="2" Checked="RulesAndRegulationsCheckbox_Checked" Unchecked="RulesAndRegulationsCheckbox_Unchecked">
                        <TextBlock Margin="12,0,0,0">I agree</TextBlock>
                    </CheckBox>

                    <TextBlock Foreground="#FFCBD4DD" HorizontalAlignment="Left" VerticalAlignment="Top" FontFamily="Bahnschrift Light" FontSize="14" UseLayoutRounding="True" Grid.Row="3">
                        Once you've agreed to our rules, select the Next button to continue.
                    </TextBlock>

                    <!-- Setup Navigation Buttons -->
                    <Grid Grid.Column="1" Grid.Row="4">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="160" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="160" />
                        </Grid.ColumnDefinitions>

                        <Button x:Name="RulesAndRegulationsNextButton" Content="Next" Style="{DynamicResource NavButton}" FontSize="18" Click="RulesAndRegulationsNextButton_Click" IsEnabled="False" />
                        <Button Content="Cancel" Style="{DynamicResource NavButton}" FontSize="18" Grid.Column="3" Click="RulesAndRegulationsCancelButton_Click" />
                    </Grid>
                </Grid>

                <!-- Install Directory -->
                <Grid x:Name="InstallDirectoryGrid" Visibility="Collapsed">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="40" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="50" />
                    </Grid.RowDefinitions>

                    <TextBlock Style="{DynamicResource MainWindowTitle}">
                        Installation Directory
                    </TextBlock>

                    <Grid Grid.Row="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <Grid.RowDefinitions>
                            <RowDefinition Height="130" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <Button Style="{DynamicResource CustomRadioBlock}" Margin="0,0,12,12" Click="EasySetupButton_Click">
                            <Button.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#990A263C"/>
                                    <GradientStop Color="#99082C49" Offset="1"/>
                                </LinearGradientBrush>
                            </Button.Background>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="48" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>

                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>

                                <Ellipse x:Name="EasySetupOuterEllipse" Height="18" Stroke="#CC5584AC" Width="18" StrokeThickness="2"/>
                                <Ellipse x:Name="EasySetupEllipse" Height="10" Fill="#CC5584AC" Width="10"/>

                                <Grid Grid.Column="1">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="45" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>

                                    <TextBlock Grid.Row="0" Foreground="White" HorizontalAlignment="Left" VerticalAlignment="Bottom" FontFamily="Bahnschrift SemiBold Condensed" FontSize="20" Padding="0,0,0,2" UseLayoutRounding="True">
                                        Easy Setup
                                    </TextBlock>
                                    <TextBlock Grid.Row="1" TextWrapping="Wrap" Foreground="#FFCBD4DD" HorizontalAlignment="Left" VerticalAlignment="Top" FontFamily="Bahnschrift Light SemiCondensed" FontSize="14" Padding="0,2,12,0" UseLayoutRounding="True">
                                        Quick setup option, installs SWG Legacy to a default directory on the "C" drive.
                                    </TextBlock>
                                </Grid>
                            </Grid>
                        </Button>

                        <Button Style="{DynamicResource CustomRadioBlock}" Grid.Column="1" Margin="12,0,0,12" Click="AdvancedSetupButton_Click">
                            <Button.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#990A263C"/>
                                    <GradientStop Color="#99082C49" Offset="1"/>
                                </LinearGradientBrush>
                            </Button.Background>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="48" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>

                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>

                                <Ellipse x:Name="AdvancedSetupOuterEllipse" Height="18" Stroke="#CC5584AC" Width="18" StrokeThickness="2"/>
                                <Ellipse x:Name="AdvancedSetupEllipse" Height="10" Fill="#CC5584AC" Width="10" Visibility="Collapsed"/>

                                <Grid Grid.Column="1">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="45" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>

                                    <TextBlock Grid.Row="0" Foreground="White" HorizontalAlignment="Left" VerticalAlignment="Bottom" FontFamily="Bahnschrift SemiBold Condensed" FontSize="20" Padding="0,0,0,2" UseLayoutRounding="True">
                                        Advanced Setup
                                    </TextBlock>
                                    <TextBlock Grid.Row="1" TextWrapping="Wrap" Foreground="#FFCBD4DD" HorizontalAlignment="Left" VerticalAlignment="Top" FontFamily="Bahnschrift Light SemiCondensed" FontSize="14" Padding="0,2,12,0" UseLayoutRounding="True">
                                        Select a custom directory for installing SWG Legacy.
                                    </TextBlock>
                                </Grid>
                            </Grid>
                        </Button>

                        <!-- Easy Setup Info -->
                        <TextBlock x:Name="EasySetupSection" TextWrapping="Wrap" Foreground="#FFCBD4DD" FontFamily="Bahnschrift Light" Grid.Row="1" Margin="0,12,12,12">
                            Automatically installs SWG Legacy to the <Bold>"C:/SWGLegacy"</Bold> directory.
                        </TextBlock>

                        <!-- Advanced Setup Info -->
                        <Grid x:Name="AdvancedSetupSection" Grid.Row="1" Grid.Column="2" Margin="12,0,0,12" Visibility="Collapsed">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="34" />
                                <RowDefinition Height="46" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="150" />
                            </Grid.ColumnDefinitions>

                            <TextBlock Grid.Row="0" Foreground="White" HorizontalAlignment="Left" VerticalAlignment="Bottom" FontFamily="Bahnschrift SemiBold Condensed" FontSize="20" UseLayoutRounding="True" Grid.ColumnSpan="2">
                            Select a Directory
                            </TextBlock>
                            <TextBox Grid.Row="1" x:Name="AdvancedSetupTextbox" Style="{DynamicResource TextBoxTransparent}" VerticalAlignment="Bottom" Margin="0,4,12,0" Height="40" IsEnabled="False" TextChanged="AdvancedSetupTextbox_TextChanged" />
                            <Button x:Name="AdvancedSetupBrowseButton" Grid.Row="1"  Style="{DynamicResource NavButton}" Content="Browse" Grid.Column="1" FontSize="18" Click="AdvancedSetupBrowseButton_Click" />
                            <TextBlock Grid.Row="2" TextWrapping="Wrap" Foreground="#FFCBD4DD" FontFamily="Bahnschrift Light" Margin="0,12,0,0" Grid.ColumnSpan="2">
                                Use the <Bold>"Browse"</Bold> button and navigate to a folder to install SWG Legacy to. It is recommended to install SWG Legacy to the root of your hard drive. (e.g. <Bold>"C:/SWGLegacy"</Bold>)<LineBreak/><LineBreak/>
                                At least <Bold>6GB</Bold> of free hard drive is recommended for the base game installation.
                            </TextBlock>
                        </Grid>
                    </Grid>

                    <!-- Setup Navigation Buttons -->
                    <Grid Grid.Column="1" Grid.Row="4">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="160" />
                            <ColumnDefinition Width="160" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="160" />
                        </Grid.ColumnDefinitions>

                        <Button Content="Back" Style="{DynamicResource NavButton}" Margin="0,0,10,0" FontSize="18" Click="InstallDirectoryBackButton_Click" />
                        <Button x:Name="InstallDirectoryNextButton" Content="Next" Style="{DynamicResource NavButton}" FontSize="18" Grid.Column="1" Click="InstallDirectoryNextButton_Click" />
                        <Button Content="Cancel" Style="{DynamicResource NavButton}" FontSize="18" Grid.Column="3" Click="InstallDirectoryCancelButton_Click" />
                    </Grid>
                </Grid>

                <!-- Game Validation-->
                <Grid x:Name="GameValidationGrid" Visibility="Collapsed">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="40" />
                        <RowDefinition Height="40" />
                        <RowDefinition Height="20" />
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="50" />
                    </Grid.RowDefinitions>

                    <TextBlock Style="{DynamicResource MainWindowTitle}">
                        Game Validation
                    </TextBlock>

                    <TextBlock Foreground="#FFCBD4DD" HorizontalAlignment="Left" VerticalAlignment="Top" FontFamily="Bahnschrift Light" FontSize="14" UseLayoutRounding="True" TextWrapping="WrapWithOverflow" Grid.Row="1">
                        To legally play a Star Wars Galaxies Emulator, you must own a purchased copy of Star Wars Galaxies.
                    </TextBlock>

                    <CheckBox x:Name="GameValidationCheckbox" Grid.Row="2" Margin="20,0,0,0" Checked="GameValidationCheckbox_Checked" Unchecked="GameValidationCheckbox_Unchecked">
                        <TextBlock Margin="12,0,0,0">I verify that I own a legal copy of Star Wars Galaxies</TextBlock>
                    </CheckBox>

                    <!-- Enable on checkbox checked -->
                    <Border x:Name="GameValidationDirectorySection" Grid.Row="3" Margin="20" Padding="20" CornerRadius="3" Background="#19000000" Visibility="Collapsed">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="40" />
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>

                            <TextBlock Foreground="#FFCBD4DD" HorizontalAlignment="Left" VerticalAlignment="Top" FontFamily="Bahnschrift Light" FontSize="14" TextWrapping="WrapWithOverflow" UseLayoutRounding="True">
                                Locate your Star Wars Galaxies installation using the "Browse" button below.<LineBreak/>You cannot use a 14 day trial or any other trial for this verification.
                            </TextBlock>

                            <Grid Grid.Row="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="180" />
                                </Grid.ColumnDefinitions>

                                <Grid Grid.Row="1" Margin="0,10,0,0">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="30" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>

                                    <TextBlock Style="{DynamicResource MainWindowTitle}">
                                        Selected Directory
                                    </TextBlock>
                                    <StackPanel Grid.Row="1" Name="Container">
                                        <TextBox x:Name="GameValidationTextBox" Style="{DynamicResource TextBoxTransparent}" Width="{Binding ElementName=Container,Path=ActualWidth}" MaxWidth="320" HorizontalAlignment="Left" IsEnabled="False" Height="40" Margin="0,4,12,4" TextChanged="GameValidationTextBox_TextChanged"  />
                                    </StackPanel>
                                </Grid>

                                <Button Content="Browse" Style="{DynamicResource NavButton}" FontSize="18" Grid.Column="1" Height="50" Width="160" HorizontalAlignment="Right" VerticalAlignment="Bottom" Click="GameValidationBrowseButton_Click" />
                            </Grid>
                        </Grid>
                    </Border>

                    <!-- Setup Navigation Buttons -->
                    <Grid Grid.Column="1" Grid.Row="5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="160" />
                            <ColumnDefinition Width="160" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="160" />
                        </Grid.ColumnDefinitions>

                        <Button Content="Back" Style="{DynamicResource NavButton}" Margin="0,0,10,0" FontSize="18" Click="GameValidationBackButton_Click" />
                        <Button x:Name="GameValidationNextButton" Content="Next" Style="{DynamicResource NavButton}" FontSize="18" Grid.Column="1" Click="GameValidationNextButton_Click" IsEnabled="False" />
                        <Button Content="Cancel" Style="{DynamicResource NavButton}" FontSize="18" Grid.Column="3" Click="GameValidationCancelButton_Click" />
                    </Grid>
                </Grid>

            </Grid>

        </Grid>
    </Grid>

</Window>
